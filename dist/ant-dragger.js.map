{"version":3,"file":"ant-dragger.js","sources":["../node_modules/react-dnd/lib/utils/shallowEqual.js","../src/EventType.js","../src/Draggable.js","../src/EventDispatcher.js","../src/EventCreator.js","../src/Dragger.js","../src/DraggerContext.js","../src/DraggerHandler.js","../src/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = shallowEqual;\nfunction shallowEqual(objA, objB) {\n\tif (objA === objB) {\n\t\treturn true;\n\t}\n\n\tvar keysA = Object.keys(objA);\n\tvar keysB = Object.keys(objB);\n\n\tif (keysA.length !== keysB.length) {\n\t\treturn false;\n\t}\n\n\t// Test for A's keys different from B.\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\tfor (var i = 0; i < keysA.length; i += 1) {\n\t\tif (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar valA = objA[keysA[i]];\n\t\tvar valB = objB[keysA[i]];\n\n\t\tif (valA !== valB) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}","export const BEGIN_DRAG = 'BEGIN_DRAG'\nexport const END_DRAG = 'END_DRAG'\nexport const DROP = 'DROP'\nexport const HOVER = 'HOVER'\nexport const ENTER = 'ENTER'\nexport const LEAVE = 'LEAVE'\nexport const CAN_DRAG = 'CAN_DRAG'\nexport const CAN_DROP = 'CAN_DROP'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  DragSource,\n  DropTarget\n} from 'react-dnd'\nimport shallowEqual from 'react-dnd/lib/utils/shallowEqual'\nimport {\n  BEGIN_DRAG,\n  END_DRAG,\n  HOVER,\n  ENTER,\n  LEAVE,\n  DROP,\n\n  CAN_DRAG,\n  CAN_DROP\n} from './EventType'\n\nclass Draggable extends React.Component {\n  static childContextTypes = {\n    dragSourceCreator: PropTypes.func,\n    dragCursor: PropTypes.string,\n    dragHandlerType: PropTypes.string\n  }\n\n  getChildContext () {\n    return {\n      dragSourceCreator: this.props.connectDragSource,\n      dragCursor: this.props.dragCursor,\n      dragHandlerType: this.props.dragHandlerType\n    }\n  }\n\n  componentDidMount () {\n    const {\n      children,\n\n      dragToken,\n      draggerPreview,\n      connectDragPreview\n    } = this.props\n\n    if (draggerPreview && typeof draggerPreview === 'function') {\n      const node = draggerPreview(dragToken(), children.props)\n      if (typeof node === 'function') {\n        node(connectDragPreview)\n      } else if (typeof node.then === 'function') {\n        node.then(connectDragPreview)\n      } else {\n        connectDragPreview(node)\n      }\n    }\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    const {\n      dragToken,\n      dispatcher,\n      isOver: currIsOver,\n      item\n    } = this.props\n    const {\n      isOver: prevIsOver\n    } = prevProps\n\n    if (!prevIsOver && currIsOver) { // enter\n      dispatcher(ENTER, {\n        source: item && item.$source,\n        target: dragToken(),\n        props: this.props,\n        component: this\n      })\n    } else if (!currIsOver && prevIsOver) { // leave\n      dispatcher(LEAVE, {\n        source: item && item.$source,\n        target: dragToken(),\n        props: this.props,\n        component: this\n      })\n    }\n  }\n\n  render () {\n    const {\n      children,\n\n      dispatcher,\n      dragToken,\n      dragCursor,\n      draggingHint,\n      dragHandlerType,\n      wrapTag: Tag,\n      wrapStyle,\n      wrapClassName,\n      draggerPreview,\n\n      connectDragSource,\n      connectDropTarget,\n      connectDragPreview,\n      isDragging,\n      isOver,\n      item,\n      itemType,\n      differenceFromInitialOffset,\n      initialClientOffset,\n      initialSourceClientOffset,\n      clientOffset,\n      sourceClientOffset,\n\n      ...otherProps\n    } = this.props\n\n    let className = wrapClassName\n    if (typeof className !== 'string' &&\n        typeof className.join === 'function') {\n      className = className.join(' ')\n    }\n\n    const style = {\n      cursor: dragHandlerType !== 'default' ? 'auto' : dragCursor,\n      ...wrapStyle\n    }\n\n    let props = {\n      className,\n      style,\n      ...otherProps\n    }\n\n    let child = children\n    if (typeof child !== 'string') {\n      child = React.Children.only(child)\n    }\n\n    if ((isDragging &&\n        typeof draggingHint === 'function' &&\n        differenceFromInitialOffset !== null)) {\n      const newProps = draggingHint(props, child)\n      if (newProps) {\n        props = newProps\n      }\n    }\n\n    if (typeof child.type !== 'string') {\n      child = (\n        <Tag {...props}>{child}</Tag>\n      )\n    } else {\n      child = React.cloneElement(child, {\n        ...child.props,\n        ...props,\n        style: {\n          ...child.props.style,\n          ...props.style\n        }\n      })\n    }\n\n    child = connectDropTarget(child)\n    if (dragHandlerType === 'default') {\n      child = connectDragSource(child)\n    }\n    return child\n  }\n}\n\nclass DraggableWrapper extends React.Component {\n  static contextTypes = {\n    dispatcher: PropTypes.func,\n    draggerType: PropTypes.string,\n    dragDropManager: PropTypes.object,\n    draggerPreview: PropTypes.func\n  }\n\n  static propTypes = {\n    dragToken: PropTypes.func.isRequired,\n    draggingHint: PropTypes.func,\n    dragHandlerType: PropTypes.oneOf(['default', 'handler']),\n    dragCursor: PropTypes.oneOf(['default', 'move', 'pointer']),\n    wrapTag: PropTypes.string,\n    wrapStyle: PropTypes.object,\n    wrapClassName: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.string),\n      PropTypes.string\n    ])\n  }\n\n  static defaultProps = {\n    wrapTag: 'div',\n    dragCursor: 'default',\n    dragHandlerType: 'default',\n    wrapStyle: {},\n    wrapClassName: ''\n  }\n\n  dragSource = {\n    beginDrag: this.dispatchBeginDragEvent.bind(this),\n    endDrag: this.dispatchEndDragEvent.bind(this),\n    canDrag: this.dispatchCanDragEvent.bind(this)\n  }\n\n  dropTarget = {\n    hover: this.dispatchHoverEvent.bind(this),\n    drop: this.dispatchDropEvent.bind(this),\n    canDrop: this.dispatchCanDropEvent.bind(this)\n  }\n\n  constructor (props, context) {\n    super(props, context)\n    this.cachedWrapped = undefined\n  }\n\n  componentWillUnmount () {\n    this.cachedWrapped = undefined\n  }\n\n  dispatchBeginDragEvent (props, monitor, component) {\n    const source = this.props.dragToken()\n    let result = this.context.dispatcher(\n      BEGIN_DRAG,\n      {\n        source,\n        props,\n        component\n      }\n    )\n    if (result === undefined) {\n      result = {}\n    }\n    if (result.dragToken === undefined) {\n      result.dragToken = source\n    }\n    result.$target = result.$source = result.dragToken\n    return result\n  }\n\n  dispatchEndDragEvent (props, monitor, component) {\n    const {\n      $target: target,\n      $source: source\n    } = monitor.getItem()\n    this.context.dispatcher(\n      END_DRAG,\n      {\n        target,\n        source,\n        props,\n        component\n      }\n    )\n  }\n\n  dispatchCanDragEvent (props, monitor) {\n    const source = this.props.dragToken()\n    let result = this.context.dispatcher(\n      CAN_DRAG,\n      {\n        source,\n        props\n      }\n    )\n    if (result === undefined) {\n      result = true\n    }\n    return result\n  }\n\n  dispatchHoverEvent (props, monitor, component) {\n    const current = component.props.dragToken()\n    const source = monitor.getItem().$source\n\n    if (shallowEqual(current, source) && current === source) {\n      return\n    }\n\n    monitor.getItem().$target = current\n    const handled = this.context.dispatcher(\n      HOVER,\n      {\n        target: current,\n        source,\n        props,\n        component\n      }\n    )\n\n    if (handled && (handled.constructor === current.constructor)) {\n      monitor.getItem().$target = handled\n    }\n    return handled\n  }\n\n  dispatchDropEvent (props, monitor, component) {\n    const {\n      $target: target,\n      $source: source\n    } = monitor.getItem()\n    const handled = this.context.dispatcher(\n      DROP,\n      {\n        target,\n        source,\n        props,\n        component\n      }\n    )\n    return handled\n  }\n\n  dispatchCanDropEvent (props, monitor) {\n    const {\n      $target: target,\n      $source: source\n    } = monitor.getItem()\n    let result = this.context.dispatcher(\n      CAN_DROP,\n      {\n        target,\n        source,\n        props\n      }\n    )\n    if (result === undefined) {\n      result = true\n    }\n    return result\n  }\n\n  render () {\n    const {\n      children,\n      dragToken,\n      dragCursor,\n      draggingHint,\n      wrapTag,\n      wrapStyle,\n      wrapClassName,\n      ...otherProps\n    } = this.props\n\n    const {\n      dispatcher,\n      draggerType,\n      draggerPreview\n    } = this.context\n\n    if (!this.cachedWrapped) {\n      this.cachedWrapped = DragSource(draggerType, this.dragSource, (connect, monitor) => ({\n        connectDragSource: connect.dragSource(),\n        connectDragPreview: connect.dragPreview(),\n        isDragging: monitor.isDragging(),\n        initialClientOffset: monitor.getInitialClientOffset(),\n        initialSourceClientOffset: monitor.getInitialSourceClientOffset()\n      }))(\n        DropTarget(draggerType, this.dropTarget, (connect, monitor) => ({\n          connectDropTarget: connect.dropTarget(),\n          isOver: monitor.isOver({ shallow: true }),\n          item: monitor.getItem(),\n          itemType: monitor.getItemType(),\n          differenceFromInitialOffset: monitor.getDifferenceFromInitialOffset(),\n          clientOffset: monitor.getClientOffset(),\n          sourceClientOffset: monitor.getSourceClientOffset()\n        }))(Draggable)\n      )\n    }\n    const Wrapped = this.cachedWrapped\n\n    const wrappedProps = {\n      dragCursor,\n      draggingHint,\n      wrapTag,\n      wrapStyle,\n      wrapClassName,\n      draggerPreview,\n      dragToken,\n      dispatcher\n    }\n\n    return (\n      <Wrapped {...wrappedProps} {...otherProps}>{children}</Wrapped>\n    )\n  }\n}\n\nexport default DraggableWrapper\n","export default (fn) => (type, event) => fn(type, event)\n","export default (source, target) => (options = {}) => {\n  const base = {\n    source,\n    target\n  }\n  const extra = {\n    item: options.item,\n    itemType: options.itemType,\n    isDragging: options.isDragging,\n    isOver: options.isOver,\n\n    differenceFromInitialOffset: options.differenceFromInitialOffset,\n    initialClientOffset: options.initialClientOffset,\n    initialSourceClientOffset: options.initialSourceClientOffset,\n    clientOffset: options.clientOffset,\n    sourceClientOffset: options.sourceClientOffset\n  }\n\n  return {\n    ...base,\n    ...extra\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport eventDispatcher from './EventDispatcher'\nimport eventCreator from './EventCreator'\n\nimport {\n  DropTarget\n} from 'react-dnd'\n\nimport {\n  BEGIN_DRAG,\n  END_DRAG,\n  HOVER,\n  ENTER,\n  LEAVE,\n  DROP,\n  CAN_DRAG,\n  CAN_DROP\n} from './EventType'\n\nconst EVENT_FUNC = {\n  [BEGIN_DRAG]: 'onDragStart',\n  [END_DRAG]: 'onDragEnd',\n  [HOVER]: 'onDragging',\n  [ENTER]: 'onDragEnter',\n  [LEAVE]: 'onDragLeave',\n  [DROP]: 'onDrop',\n  [CAN_DRAG]: 'canDrag',\n  [CAN_DROP]: 'canDrop'\n}\n\nconst noop = () => {}\n\nclass Dragger extends React.Component {\n  static propTypes = {\n    onDragStart: PropTypes.func,\n    onDragEnd: PropTypes.func,\n    onDrop: PropTypes.func,\n    onDragging: PropTypes.func,\n    onDragEnter: PropTypes.func,\n    onDragLeave: PropTypes.func,\n    canDrag: PropTypes.func,\n    canDrop: PropTypes.func,\n    draggerType: PropTypes.string,\n    draggerPreview: PropTypes.func\n  }\n\n  static defaultProps = {\n    onDragStart: noop,\n    onDragEnd: noop,\n    onDrop: noop,\n    onDragging: noop,\n    onDragEnter: noop,\n    onDragLeave: noop,\n    canDrag: () => true,\n    canDrop: undefined,\n    draggerType: '__dragger__',\n    draggerPreview: undefined\n  }\n\n  static childContextTypes = {\n    dispatcher: PropTypes.func,\n    draggerType: PropTypes.string,\n    draggerPreview: PropTypes.func\n  }\n\n  static contextTypes = {\n    dragDropManager: PropTypes.object\n  }\n\n  constructor (props, context) {\n    super(props, context)\n    this.notifyHandler = this.notifyHandler.bind(this)\n    this.dispatcher = eventDispatcher(this.notifyHandler)\n  }\n\n  getChildContext () {\n    return {\n      dispatcher: this.dispatcher,\n      draggerType: this.props.draggerType,\n      draggerPreview: this.props.draggerPreview\n    }\n  }\n\n  notifyHandler (type, { target, source, props, component }) {\n    let fn = this.props[EVENT_FUNC[type]]\n    if (type === CAN_DROP && !fn) {\n      fn = this.props.canDrag\n    }\n    if (!fn) {\n      console.warn('Unknown event type', type)\n    }\n    return fn && fn(eventCreator(source, target)(props), props, component)\n  }\n\n  render () {\n    const {\n      connectDropTarget\n    } = this.props\n\n    return connectDropTarget(React.Children.only(this.props.children))\n  }\n}\n\nclass Wrapper extends React.Component {\n  static propTypes = {\n    onDragEdge: PropTypes.func,\n    edgeWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.object\n    ]),\n    draggerType: PropTypes.string\n  }\n\n  static defaultProps = {\n    onDragEdge: noop,\n    edgeWidth: 20,\n    draggerType: '__dragger__'\n  }\n\n  dropTarget = {\n    hover: this.handleContainerHover.bind(this)\n  }\n\n  constructor (props) {\n    super(props)\n    this.edgeWidth = this.props.edgeWidth\n    if (typeof this.edgeWidth === 'number') {\n      const v = this.edgeWidth\n      this.edgeWidth = {\n        left: v,\n        top: v,\n        right: v,\n        bottom: v\n      }\n    }\n    this.cachedWrapped = undefined\n  }\n\n  componentWillUnmount () {\n    this.cachedWrapped = undefined\n  }\n\n  componentDidMount () {\n    this.refreshBoundingRect()\n  }\n\n  componentDidUpdate () {\n    this.refreshBoundingRect()\n  }\n\n  handleContainerHover (props, monitor, component) {\n    const {\n      x: clientX,\n      y: clientY\n    } = monitor.getClientOffset()\n    const {\n      left, top, right, bottom\n    } = this.containerBoundingRect\n    const {\n      left: edgeLeft,\n      top: edgeTop,\n      right: edgeRight,\n      bottom: edgeBottom\n    } = this.edgeWidth\n    const containerEdge = {\n      left: left + edgeLeft,\n      top: top + edgeTop,\n      right: right - edgeRight,\n      bottom: bottom - edgeBottom\n    }\n    const strike = {\n      left: clientX <= containerEdge.left,\n      top: clientY <= containerEdge.top,\n      right: clientX >= containerEdge.right,\n      bottom: clientY >= containerEdge.bottom\n    }\n\n    if (strike.left || strike.top || strike.right || strike.bottom) {\n      this.props.onDragEdge({\n        strike,\n        client: {\n          x: clientX,\n          y: clientY\n        },\n        edge: containerEdge,\n        itemType: monitor.getItemType(),\n        initialClientOffset: monitor.getInitialClientOffset(),\n        initialSourceClientOffset: monitor.getInitialSourceClientOffset(),\n        clientOffset: monitor.getClientOffset(),\n        sourceClientOffset: monitor.getSourceClientOffset(),\n        differenceFromInitialOffset: monitor.getDifferenceFromInitialOffset()\n      }, props, component)\n    }\n  }\n\n  refreshBoundingRect () {\n    setTimeout(() => {\n      const el = ReactDOM.findDOMNode(this)\n      this.containerBoundingRect = el.getBoundingClientRect()\n    }, 0)\n  }\n\n  render () {\n    if (!this.cachedWrapped) {\n      this.cachedWrapped = DropTarget(\n        this.props.draggerType,\n        this.dropTarget,\n        (collect, monitor) => ({\n          connectDropTarget: collect.dropTarget()\n        })\n      )(Dragger)\n    }\n    const Wrap = this.cachedWrapped\n\n    return (\n      <Wrap {...this.props}>{this.props.children}</Wrap>\n    )\n  }\n}\n\nexport default Wrapper\n","import {\n  DragDropContext\n} from 'react-dnd'\nimport HTML5Backend from 'react-dnd-html5-backend'\n\nexport default DragDropContext(HTML5Backend)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass DraggerHandler extends React.Component {\n  static contextTypes = {\n    dragSourceCreator: PropTypes.func,\n    dragHandlerType: PropTypes.string,\n    dragCursor: PropTypes.string\n  }\n\n  static propTypes = {\n    wrapTag: PropTypes.string\n  }\n\n  static defaultProps = {\n    wrapTag: 'div'\n  }\n\n  render () {\n    const {\n      dragSourceCreator,\n      dragHandlerType,\n      dragCursor\n    } = this.context\n\n    const style = {\n      cursor: dragCursor,\n      ...this.props.style\n    }\n    const className = this.props.className\n\n    let children = this.props.children\n    if (dragHandlerType === 'handler') {\n      const Tag = this.props.wrapTag\n      children = dragSourceCreator(\n        <Tag className={className} style={style}>{children}</Tag>\n      )\n    }\n    return children\n  }\n}\n\nexport default DraggerHandler\n","import _Draggable from './Draggable'\nimport _Dragger from './Dragger'\nimport _DraggerContext from './DraggerContext'\nimport _DraggerHandler from './DraggerHandler'\n\nexport const Draggable = _Draggable\nexport const Dragger = _Dragger\nexport const DraggerContext = _DraggerContext\nexport const DraggerHandler = _DraggerHandler\n\nexport default {\n  Draggable,\n  Dragger,\n  DraggerContext,\n  DraggerHandler\n}\n"],"names":["BEGIN_DRAG","END_DRAG","DROP","HOVER","ENTER","LEAVE","CAN_DRAG","CAN_DROP","Draggable","props","connectDragSource","dragCursor","dragHandlerType","children","dragToken","draggerPreview","connectDragPreview","node","then","prevProps","prevState","dispatcher","currIsOver","isOver","item","prevIsOver","$source","draggingHint","Tag","wrapTag","wrapStyle","wrapClassName","connectDropTarget","isDragging","itemType","differenceFromInitialOffset","initialClientOffset","initialSourceClientOffset","clientOffset","sourceClientOffset","otherProps","className","join","style","child","React","Children","only","newProps","type","cloneElement","Component","childContextTypes","PropTypes","func","string","DraggableWrapper","context","dragSource","dispatchBeginDragEvent","bind","dispatchEndDragEvent","dispatchCanDragEvent","dropTarget","dispatchHoverEvent","dispatchDropEvent","dispatchCanDropEvent","cachedWrapped","undefined","monitor","component","source","result","$target","getItem","target","current","shallowEqual","handled","constructor","draggerType","DragSource","connect","dragPreview","getInitialClientOffset","getInitialSourceClientOffset","DropTarget","shallow","getItemType","getDifferenceFromInitialOffset","getClientOffset","getSourceClientOffset","Wrapped","wrappedProps","contextTypes","object","propTypes","isRequired","oneOf","oneOfType","arrayOf","defaultProps","fn","event","options","base","extra","EVENT_FUNC","noop","Dragger","notifyHandler","eventDispatcher","canDrag","warn","eventCreator","Wrapper","handleContainerHover","edgeWidth","v","refreshBoundingRect","clientX","x","clientY","y","containerBoundingRect","left","top","right","bottom","edgeLeft","edgeTop","edgeRight","edgeBottom","containerEdge","strike","onDragEdge","el","ReactDOM","findDOMNode","getBoundingClientRect","collect","Wrap","number","DragDropContext","HTML5Backend","DraggerHandler","dragSourceCreator","_Draggable","_Dragger","DraggerContext","_DraggerContext","_DraggerHandler"],"mappings":"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"}